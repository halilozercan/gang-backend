;; Analyzed by ClojureScript 1.7.189
{:use-macros nil, :excludes #{}, :name taoensso.sente.packers.transit, :imports nil, :requires {interfaces taoensso.sente.interfaces, taoensso.sente.interfaces taoensso.sente.interfaces, cognitect.transit cognitect.transit, encore taoensso.encore, transit cognitect.transit, str clojure.string, clojure.string clojure.string, taoensso.encore taoensso.encore, cljs.reader cljs.reader, edn cljs.reader}, :uses {pack taoensso.sente.interfaces, format taoensso.encore, unpack taoensso.sente.interfaces}, :defs {get-flexi-packer {:protocol-inline nil, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 116, :column 7, :end-line 116, :end-column 23, :arglists (quote ([& [default-fmt edn-packer json-packer]])), :doc "Experimental (pre-alpha): subject to change.\n  Returns an IPacker implementation that un/packs data with a variable format\n  determined by the data's size, metadata, or the provided `default-fmt` when no\n  metadata is present.\n\n  (def fpack (partial pack (get-flexi-packer :edn)))\n  (fpack ^:edn     {:a :A :b :B}) => \"e{:a :A, :b :B}\"\n  (fpack ^:json    {:a :A :b :B}) => \"j[\"^ \",\"~:a\",\"~:A\",\"~:b\",\"~:B\"]\"\n  (fpack ^:msgpack {:a :A :b :B}  => \"m£~:a£~:A£~:b£~:B\"", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([default-fmt edn-packer json-packer])], :arglists ([& [default-fmt edn-packer json-packer]]), :arglists-meta (nil)}}, :name taoensso.sente.packers.transit/get-flexi-packer, :variadic true, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([default-fmt edn-packer json-packer])], :arglists ([& [default-fmt edn-packer json-packer]]), :arglists-meta (nil)}, :method-params [([default-fmt edn-packer json-packer])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists ([& [default-fmt edn-packer json-packer]]), :doc "Experimental (pre-alpha): subject to change.\n  Returns an IPacker implementation that un/packs data with a variable format\n  determined by the data's size, metadata, or the provided `default-fmt` when no\n  metadata is present.\n\n  (def fpack (partial pack (get-flexi-packer :edn)))\n  (fpack ^:edn     {:a :A :b :B}) => \"e{:a :A, :b :B}\"\n  (fpack ^:json    {:a :A :b :B}) => \"j[\"^ \",\"~:a\",\"~:A\",\"~:b\",\"~:B\"]\"\n  (fpack ^:msgpack {:a :A :b :B}  => \"m£~:a£~:A£~:b£~:B\""}, transit-writer* {:name taoensso.sente.packers.transit/transit-writer*, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 38, :column 1, :end-line 38, :end-column 31, :private true, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 38, :column 16, :end-line 38, :end-column 31, :private true}}, default-json-packer {:name taoensso.sente.packers.transit/default-json-packer, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 63, :column 1, :end-line 63, :end-column 38, :private true, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 63, :column 19, :end-line 63, :end-column 38, :private true}}, max-flexi-format {:name taoensso.sente.packers.transit/max-flexi-format, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 69, :column 1, :end-line 69, :end-column 32, :private true, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 69, :column 16, :end-line 69, :end-column 32, :private true}}, max-flexi-format? {:protocol-inline nil, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 68, :column 8, :end-line 68, :end-column 25, :private true, :arglists (quote ([fmt]))}, :private true, :name taoensso.sente.packers.transit/max-flexi-format?, :variadic false, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :end-column 25, :method-params ([fmt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fmt]))}, default-edn-packer {:name taoensso.sente.packers.transit/default-edn-packer, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 62, :column 1, :end-line 62, :end-column 37, :private true, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 62, :column 19, :end-line 62, :end-column 37, :private true}}, FlexiPacker {:num-fields 3, :protocols #{taoensso.sente.interfaces/IPacker}, :name taoensso.sente.packers.transit/FlexiPacker, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :end-column 21, :type true, :column 10, :line 92, :record false, :end-line 92, :skip-protocol-flag nil}, get-charset {:protocol-inline nil, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 28, :column 8, :end-line 28, :end-column 19, :private true, :arglists (quote ([transit-fmt]))}, :private true, :name taoensso.sente.packers.transit/get-charset, :variadic false, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :end-column 19, :method-params ([transit-fmt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([transit-fmt]))}, ->FlexiPacker {:protocol-inline nil, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 92, :column 10, :end-line 92, :end-column 21, :protocols #{taoensso.sente.interfaces/IPacker}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([default-fmt edn-packer json-packer]))}, :protocols #{taoensso.sente.interfaces/IPacker}, :name taoensso.sente.packers.transit/->FlexiPacker, :variadic false, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :end-column 21, :method-params ([default-fmt edn-packer json-packer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 92, :end-line 92, :max-fixed-arity 3, :fn-var true, :arglists (quote ([default-fmt edn-packer json-packer])), :skip-protocol-flag nil}, transit-reader* {:name taoensso.sente.packers.transit/transit-reader*, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 42, :column 1, :end-line 42, :end-column 31, :private true, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 42, :column 16, :end-line 42, :end-column 31, :private true}}, default-flexi-packer {:name taoensso.sente.packers.transit/default-flexi-packer, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 136, :column 1, :end-line 136, :end-column 26, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 136, :column 6, :end-line 136, :end-column 26}}, TransitPacker {:num-fields 3, :protocols #{taoensso.sente.interfaces/IPacker}, :name taoensso.sente.packers.transit/TransitPacker, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :end-column 23, :type true, :column 10, :line 46, :record false, :end-line 46, :skip-protocol-flag nil}, ->TransitPacker {:protocol-inline nil, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 46, :column 10, :end-line 46, :end-column 23, :protocols #{taoensso.sente.interfaces/IPacker}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([transit-fmt writer-opts reader-opts]))}, :protocols #{taoensso.sente.interfaces/IPacker}, :name taoensso.sente.packers.transit/->TransitPacker, :variadic false, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :end-column 23, :method-params ([transit-fmt writer-opts reader-opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 46, :end-line 46, :max-fixed-arity 3, :fn-var true, :arglists (quote ([transit-fmt writer-opts reader-opts])), :skip-protocol-flag nil}, auto-flexi-format {:protocol-inline nil, :meta {:file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :line 76, :column 8, :end-line 76, :end-column 25, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.sente.packers.transit/auto-flexi-format, :variadic false, :file "file:/Users/emrehan/.m2/repository/com/taoensso/sente/1.7.0/sente-1.7.0.jar!/taoensso/sente/packers/transit.cljs", :end-column 25, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{writer-opts default-fmt :json-verbose json-packer :s edn-packer :edn transit-fmt :json :msgpack reader-opts}, :order [:msgpack transit-fmt writer-opts reader-opts :json :edn :s default-fmt edn-packer json-packer :json-verbose]}, :doc "Experimental - subject to change!\n  Optional Transit-format[1] IPacker implementation for use with Sente.\n  [1] https://github.com/cognitect/transit-format."}